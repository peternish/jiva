default:
  image: node:latest

variables:
  VERCEL_ORG_ID: $VERCEL_ORG_ID

stages:
  - lint
  - test
  - deploy

Lint:
  stage: lint
  script:
    - npm ci
    - npm run lint
  rules:
  - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging"'

SonarScanner:
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [""]
  stage: test
  script:
    - sonar-scanner
      -Dsonar.projectKey=$SONARQUBE_PROJECT_KEY
      -Dsonar.host.url=https://pmpl.cs.ui.ac.id/sonarqube
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
      -Dsonar.branch.target=$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.qualitygate.wait=true
  rules:
  - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging"'

Test:
  stage: test
  script:
    - npm ci
    - npm run build
    - npm run test
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging"'

DeployStaging:
  stage: deploy
  only:
    - staging
  
  environment:
    name: staging
  
  variables:
    VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID_STAGING

  script:
    - npm i -g vercel
    - vercel --confirm -t $VERCEL_TOKEN --prod

DeployProduction:
  stage: deploy
  only:
    - master
  
  environment:
    name: production
  
  variables:
    VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID_PRODUCTION

  script:
    - npm i -g vercel
    - vercel --confirm -t $VERCEL_TOKEN --prod
