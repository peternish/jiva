default:
  image: node:latest

variables:
  VERCEL_ORG_ID: $VERCEL_ORG_ID

.base_rules: &base_rules
  only:
    - merge_requests
    - staging
    - master

.apply_on_mr: &apply_on_mr
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging"'


stages:
  - build
  - test
  - deploy

Build:
  <<: *base_rules
  stage: build
  needs: ['Install']
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - .npm/
      - node_modules
    policy: pull
  script:
    - npm ci --cache .npm --prefer-offline --progress=false --no-audit --include=dev
    - npm i jest --save-dev --quiet
    - npm run build
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - .npm/
      - node_modules
  artifacts:
    paths:
      - .next

Test:
  <<: *base_rules
  stage: test
  needs: ['Install', 'Build']
  script:
    - npm run coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    paths:
      - coverage/

SonarScanner:
  <<: *apply_on_mr
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [""]
  stage: test
  needs: ['Test']
  script:
    - sonar-scanner
      -Dsonar.projectKey=$SONARQUBE_PROJECT_KEY
      -Dsonar.host.url=https://pmpl.cs.ui.ac.id/sonarqube
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
      -Dsonar.branch.target=$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.qualitygate.wait=true
      -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      -Dsonar.coverage.exclusions=**/.scannerwork/**,**/api/**,**/public/**,**/redux/**,**/styles/**,**/utils/**,**/__tests__/**

DeployStaging:
  stage: deploy
  environment:
    name: staging
  variables:
    VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID_STAGING
  script:
    - npm i -g vercel
    - vercel --confirm -t $VERCEL_TOKEN --prod
  only:
    - staging

DeployProduction:
  stage: deploy
  environment:
    name: production
  variables:
    VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID_PRODUCTION
  script:
    - npm i -g vercel
    - vercel --confirm -t $VERCEL_TOKEN --prod
  only:
    - master