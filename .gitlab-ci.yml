default:
  image: node:latest

stages:
  - lint
  - test
  - deploy

lint:
  stage: lint
  script:
    - npm ci
    - npm run lint

test:
  stage: test
  script:
    - npm ci
    - npm run build
    - npm run test
  coverage: /All\sfiles.*?\s+(\d+.\d+)/

SonarScanner Dev:
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [""]
  stage: test
  script:
    - sonar-scanner
      -Dsonar.host.url=https://sonarqube.cs.ui.ac.id/
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
      -Dsonar.branch.target=staging
  except:
    - master
    - main
    - staging

SonarScanner:
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [""]
  stage: test
  script:
    - sonar-scanner
      -Dsonar.host.url=https://sonarqube.cs.ui.ac.id/
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
  only:
    - master
    - main
    - staging

deploy-staging:
  stage: deploy
  only:
    - staging
  
  environment:
    name: staging

  script:
    - npm i -g vercel
    - DEPLOYMENT_URL=$(VERCEL_ORG_ID=$VERCEL_ORG_ID VERCEL_PROJECT_ID=$VERCEL_PROJECT_ID_STAGING vercel --confirm -t $VERCEL_TOKEN --prod)

deploy-production:
  stage: deploy
  only:
    - master
  
  environment:
    name: production

  script:
    - npm i -g vercel
    - DEPLOYMENT_URL=$(VERCEL_ORG_ID=$VERCEL_ORG_ID VERCEL_PROJECT_ID=$VERCEL_PROJECT_ID_PRODUCTION vercel --confirm -t $VERCEL_TOKEN --prod)
